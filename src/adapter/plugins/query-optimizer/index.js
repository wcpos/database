import{clone as e,createRevision as r,fillWithDefaultSettings as a,getFromMapOrThrow as t,getPrimaryFieldOfPrimaryKey as n,normalizeMangoQuery as s,randomCouchString as i,requestIdlePromise as o,shuffleArray as m}from"rxdb";import{averageOfTimeValues as c,getFieldsOfQuery as f,sortIndexTimes as p}from"./query-optimizer-helper";import*as v from"percom";export async function findBestIndex(d){var u=n(d.schema.primaryKey),l=d.maxFieldsPerIndex?d.maxFieldsPerIndex:4,w=e(a(d.schema)),x=new Map;x.set(u,[u]);var h=new Map,y={},I={};Object.entries(d.queries).forEach((([e,r])=>{y[e]=r,I[e]=new Map;var a=Array.from(f(w,r)).filter((e=>e!==u)),t=new Map;t.set(u,[u]),h.set(e,t),new Array(l).fill(0).forEach(((e,r)=>{var n=r+1;a.length>=n&&v.per(a,n).forEach((e=>{var r=e.join(",");x.set(r,e),t.set(r,e)}))}))})),w.indexes=Array.from(x.values()).filter((e=>1!==e.length||e[0]!==u)),w=a(w);var b=i(10),q=await d.storage.createStorageInstance({schema:w,databaseName:"findBestIndex_"+i(6),collectionName:"findBestIndex_"+i(6),multiInstance:!1,databaseInstanceToken:b,options:d.instanceCreationOptions?d.instanceCreationOptions:{}});await q.bulkWrite(d.testData.map((e=>{var a=Object.assign({_rev:"",_deleted:!1,_meta:{lwt:1},_attachments:{}},e);return a._rev=r(b,a),{document:a}})),"query-optimizer");for(var O=0;O<d.runs;){for(var[_,g]of Object.entries(y)){var j=t(h,_),A=Array.from(j.entries());for(var[E,M]of A=m(A)){await o(),await o(),await o();var B=e(g);B.index=M,B=s(w,B);var k=d.storage.statics.prepareQuery(w,B);await o();var z=performance.now();await q.query(k);var C=performance.now()-z,F=I[_],N=F.has(E)?t(F,E):[];N.push(C),F.set(E,N)}}O++}var P=new Map;Object.entries(I).forEach((([e,r])=>{var a=Array.from(r.entries()).map((([e,r])=>{var a=t(x,e);return r=r.sort(((e,r)=>e-r)),{index:a,time:c(r,66)}}));a=p(a),P.set(e,a)})),await q.remove();var S={queries:{},indexesInSchema:w.indexes};return Object.entries(d.queries).forEach((([e,r])=>{var a=t(P,e),n=a[0];S.queries[e]={query:r,bestIndex:n,allIndexes:a}})),S}