import{isMaybeReadonlyArray as e,getPrimaryFieldOfPrimaryKey as r,getIndexableStringMonad as n,getFromMapOrThrow as t}from"rxdb";export function getIndexName(e){return e.join("||")}export function getIndexId(e,r){var n=getIndexName(r);return t(e.indexIdByName,n)}export function normalizeIndexedDBIndex(r,n){var t=e(n)?n.slice(0):[n];return r.properties._deleted&&t.unshift("_deleted"),t}export function getIndexedDBIndexesFromSchema(e){var n=r(e.primaryKey),t=e.indexes?e.indexes.slice(0):[];t.push([n]),e.properties._meta&&e.properties._meta.properties&&e.properties._meta.properties.lwt&&t.push(["_meta.lwt"]);var d=["_meta.lwt",n];return(t=t.map((r=>normalizeIndexedDBIndex(e,r)))).push(d),t}export var INDEXEDDB_DEFAULT_INDEX_SETITNGS={locale:null,unique:!1};export function createIndexesOnStore(e,r){r.indexIds.forEach((r=>{e.createIndex(r,r,INDEXEDDB_DEFAULT_INDEX_SETITNGS)}))}export function enhanceIndexedDBRowWithIndexes(e,r,n){for(var t=e.indexIds,d=0;d<t.length;++d){var a=t[d],x=(0,e.getIndexableStringByIndexId[a])(r);n[a]=x}}export function toIndexRow(e,r,n){var t={i:r,d:n};return enhanceIndexedDBRowWithIndexes(e,n,t),t}export var CLEANUP_INDEX=["_deleted","_meta.lwt"];export var INDEX_NAME_CLEANUP=getIndexName(CLEANUP_INDEX);export function getIndexableStringByIndexName(e){var t=r(e.primaryKey),d={},a=e.indexes?e.indexes.map((e=>Array.isArray(e)?e.slice(0):[e])):[];a.push([t]);var x=["_meta.lwt",t];(a=a.map((e=>["_deleted"].concat(e)))).push(x),a.push(CLEANUP_INDEX);var o=new Map;return a.forEach(((r,t)=>{var a="i"+t,x=getIndexName(r);o.set(x,a),d[a]=n(e,r)})),{indexIdByName:o,monadByIndexId:d}}