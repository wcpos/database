import{addRxStorageMultiInstanceSupport as t,categorizeBulkWriteRows as e,getPrimaryFieldOfPrimaryKey as a,getStartIndexStringFromLowerBound as n,getStartIndexStringFromUpperBound as s,lastOfArray as r,now as i,PROMISE_RESOLVE_VOID as o,ensureNotFalsy as c}from"rxdb";import{Subject as m}from"rxjs";import{attachmentObjectId as h,closeIndexedDBDatabase as d,getIndexedDBState as l,getStoreNamesForStorageInstance as u,RX_STORAGE_NAME_INDEXEDDB as v,TRANSACTION_SETTINGS as w}from"./indexeddb-helpers";import{CLEANUP_INDEX as p,getIndexableStringByIndexName as y,getIndexId as f,toIndexRow as g}from"./indexeddb-index-helpers";import{countIndexedDB as I,queryIndexedDB as P}from"./indexeddb-query";import{indexedDBFindByIds as x}from"./indexeddb-find-by-ids";var S=i();export var RxStorageInstanceIndexedDB=function(){function t(t,e,n,s,r,i,o){this.changes$=new m,this.instanceId=S++,this.closed=!1,this.storage=t,this.databaseName=e,this.collectionName=n,this.schema=s,this.internals=r,this.options=i,this.settings=o,this.primaryPath=a(this.schema.primaryKey)}var l=t.prototype;return l.bulkWrite=async function(t,a){var n=this.internals.state;await n.creationPromise;var s={success:{},error:{}},r=await this.internals.state.creationPromise,i=[this.internals.storeNames.documentStore];this.schema.attachments&&i.push(this.internals.storeNames.attachmentsStore),b(this);var o,m=r.transaction(i,"readwrite",w),d=m.objectStore(this.internals.storeNames.documentStore),l=t.map((t=>t.document[this.primaryPath])),u=await x(d,l,!0),v=e(this,this.primaryPath,u,t,a);s.error=v.errors;for(var p=v.bulkInsertDocs,y=0;y<p.length;++y){var f=p[y],I=f.document[this.primaryPath],P=g(this.internals,I,f.document);o=d.put(P),s.success[I]=f.document}for(var S=v.bulkUpdateDocs,N=0;N<S.length;++N){var B=S[N],D=B.document[this.primaryPath],k=g(this.internals,D,B.document);o=d.put(k),s.success[D]=B.document}if(this.schema.attachments){var j=m.objectStore(this.internals.storeNames.attachmentsStore);v.attachmentsAdd.forEach((t=>{o=j.put({docIdWithAttachmentId:h(t.documentId,t.attachmentId),length:t.attachmentData.length,type:t.attachmentData.type,data:t.attachmentData.data})})),v.attachmentsUpdate.forEach((t=>{o=j.put({docIdWithAttachmentId:h(t.documentId,t.attachmentId),length:t.attachmentData.length,type:t.attachmentData.type,data:t.attachmentData.data})})),v.attachmentsRemove.forEach((t=>{o=j.delete(h(t.documentId,t.attachmentId))}))}if(m.commit&&m.commit(),v.eventBulk.events.length>0){var R=c(v.newestRow).document;v.eventBulk.checkpoint={id:R[this.primaryPath],lwt:R._meta.lwt}}return new Promise(((t,e)=>{m.onerror=e;var a=()=>{v.eventBulk.events.length>0&&this.changes$.next(v.eventBulk),t(s)};o?o.onsuccess=a:m.oncomplete=a}))},l.findDocumentsById=function(t,e){return this.internals.state.creationPromise.then((a=>{b(this);var n=a.transaction([this.internals.storeNames.documentStore],"readonly",w).objectStore(this.internals.storeNames.documentStore);return x(n,t,e)}))},l.query=async function(t){return await this.internals.state.creationPromise,b(this),P(this,t)},l.count=async function(t){return await I(this,t)},l.getChangedDocumentsSince=async function(t,e){var a=this.internals.state;await a.creationPromise;var n=this.settings.IDBKeyRange,s=await this.internals.state.creationPromise;b(this);var i=s.transaction([this.internals.storeNames.documentStore],"readonly",w),o=i.objectStore(this.internals.storeNames.documentStore),c=["_meta.lwt",this.primaryPath],m=f(this.internals,c),h=o.index(m),d="";if(e){var l={[this.primaryPath]:e.id,_meta:{lwt:e.lwt}};d=(0,this.internals.getIndexableStringByIndexId[m])(l)}var u=n.lowerBound(d,!!e),v=await new Promise(((e,a)=>{var n=h.getAll(u,t);n.onerror=a,n.onsuccess=function(t){e(t.target.result)}}));i.commit&&i.commit();var p=r(v);return{documents:v.map((t=>t.d)),checkpoint:p?{id:p.d[this.primaryPath],lwt:p.d._meta.lwt}:e||{id:"",lwt:0}}},l.changeStream=function(){return this.changes$.asObservable()},l.cleanup=async function(t){var e=this.internals.state;await e.creationPromise;var a=this.settings.IDBKeyRange,r=await this.internals.state.creationPromise;b(this);var o=r.transaction([this.internals.storeNames.documentStore],"readwrite",w),c=o.objectStore(this.internals.storeNames.documentStore),m=this.settings.batchSize,h=i()-t,d=f(this.internals,p),l=c.index(d),u=n(this.schema,p,[!0,1],!0),v=s(this.schema,p,[!0,h],!0),y=a.bound(u,v,!0,!0),g=await new Promise(((t,e)=>{var a=l.getAll(y,m);a.onerror=e,a.onsuccess=function(e){t(e.target.result)}}));return await Promise.all(g.map((t=>new Promise(((e,a)=>{var n=t.i,s=c.delete(n);s.onerror=a,s.onsuccess=()=>e()}))))),o.commit&&o.commit(),g.length<m},l.remove=async function(){var t=this.internals.state;await t.creationPromise;var e=await this.internals.state.creationPromise;b(this);var a=e.transaction([this.internals.storeNames.documentStore],"readwrite",w),n=a.objectStore(this.internals.storeNames.documentStore);return await Promise.all([n].map((t=>new Promise(((t,e)=>{var a=n.clear();a.onerror=e,a.onsuccess=e=>{t()}}))))),a.commit&&a.commit(),this.close()},l.getAttachmentData=async function(t,e){var a=this.internals.state;await a.creationPromise;var n=await this.internals.state.creationPromise;b(this);var s=n.transaction([this.internals.storeNames.attachmentsStore],"readonly",w).objectStore(this.internals.storeNames.attachmentsStore),r=h(t,e);return new Promise(((a,n)=>{var i=s.get(r);i.onsuccess=()=>{var s=i.result;s?a(s.data):n("attachment missing documentId: "+t+" attachmentId: "+e)}}))},l.close=async function(){return await this.internals.state.creationPromise,b(this),this.closed=!0,this.changes$.complete(),d(this.internals.state)},l.conflictResultionTasks=function(){return(new m).asObservable()},l.resolveConflictResultionTask=function(t){return o},t}();export async function createIndexedDBStorageInstance(e,a,n){var s=y(a.schema),r=Array.from(s.indexIdByName.values()),i=await l(e,n,a.databaseName,[{collectionName:a.collectionName,schema:a.schema,indexIds:r}]);await i.creationPromise;var o={state:i,storeNames:u(a.collectionName,a.schema),getIndexableStringByIndexId:s.monadByIndexId,indexIdByName:s.indexIdByName,indexNames:Object.keys(s),indexIds:r},c=new RxStorageInstanceIndexedDB(e,a.databaseName,a.collectionName,a.schema,o,a.options,n);return t(v,a,c),c}function b(t){if(t.closed)throw new Error("RxStorageInstanceIndexedDB is closed "+t.databaseName+"-"+t.collectionName)}