import{categorizeBulkWriteRows as e,ensureRxStorageInstanceParamsAreCorrect as t,getPrimaryFieldOfPrimaryKey as a,lastOfArray as s,now as n,PROMISE_RESOLVE_TRUE as r,PROMISE_RESOLVE_VOID as o,newRxError as i,RxStorageDefaultStatics as c,getQueryMatcher as l,getSortComparator as h}from"rxdb";import{Subject as g}from"rxjs";export var RX_STORAGE_NAME_LOCALSTORAGE="localstorage";export var RxStorageLocalstorage=function(){function e(e){this.name=RX_STORAGE_NAME_LOCALSTORAGE,this.statics=c,this.settings=e}return e.prototype.createStorageInstance=function(e){return t(e),createLocalstorageStorageInstance(this,e,Object.assign({},this.settings,e.options))},e}();export function getRxStorageLocalstorage(e={}){return new RxStorageLocalstorage(e)}var u=new g,m=!1;export function getStorageEventStream(){return m||(m=!0,window.addEventListener("storage",(e=>{e.key&&u.next({key:e.key,newValue:e.newValue})}))),u.asObservable()}export var RxStorageInstanceLocalstorage=function(){function t(e,t,s,n,r,o,i,c){this.changes$=new g,this.closed=!1,this.storage=e,this.databaseName=t,this.collectionName=s,this.schema=n,this.internals=r,this.options=o,this.settings=i,this.databaseInstanceToken=c,this.primaryPath=a(this.schema.primaryKey),this.storageKey="rx-storage-localstorage-"+this.databaseName+"--"+this.collectionName+"--"+this.schema.version,this.changestreamStorageKey="rx-storage-localstorage-changestream-"+this.databaseName+"--"+this.collectionName+"--"+this.schema.version,this.changeStreamSub=getStorageEventStream().subscribe((e=>{if(e.key===this.changestreamStorageKey&&e.newValue&&e.databaseInstanceToken!==this.databaseInstanceToken){var t=JSON.parse(e.newValue);t.databaseInstanceToken!==this.databaseInstanceToken&&(this.changes$.next(t.eventBulk),this.internals.docsById=getStorageState(this.storageKey))}}))}var c=t.prototype;return c.bulkWrite=async function(t,a){var s={success:{},error:{}},n=e(this,this.primaryPath,this.internals.docsById,t,a);s.error=n.errors;var r=!1;if([n.bulkInsertDocs,n.bulkUpdateDocs].forEach((e=>{e.forEach((e=>{r=!0;var t=e.document[this.primaryPath];this.internals.docsById[t]=e.document,s.success[t]=e.document}))})),r&&localstoragePersist(this),n.eventBulk.events.length>0){var o={databaseInstanceToken:this.databaseInstanceToken,eventBulk:n.eventBulk},i=JSON.stringify(o);localStorage.setItem(this.changestreamStorageKey,i),u.next({key:this.changestreamStorageKey,newValue:i,databaseInstanceToken:this.databaseInstanceToken})}return s},c.findDocumentsById=async function(e,t){var a={},s=this.internals.docsById;return e.forEach((e=>{var n=s[e];n&&(!t&&n._deleted||(a[e]=n))})),a},c.query=async function(e){var t=e.query,a=t.skip?t.skip:0,s=a+(t.limit?t.limit:1/0),n=l(this.schema,t),r=Object.values(this.internals.docsById).filter((e=>n(e))),o=h(this.schema,t);return{documents:r.sort(o).slice(a,s)}},c.count=async function(e){return{count:(await this.query(e)).documents.length,mode:"fast"}},c.getChangedDocumentsSince=async function(e,t){var a=Object.values(this.internals.docsById);t&&(a=a.filter((e=>e._meta.lwt>t.lwt||e._meta.lwt===t.lwt&&e[this.primaryPath]>t.id)));var n=a.slice(0,e),r=s(n);return{documents:n,checkpoint:r?{id:r[this.primaryPath],lwt:r._meta.lwt}:t||{id:"",lwt:0}}},c.changeStream=function(){return this.changes$.asObservable()},c.cleanup=function(e){var t=n()-e,a=!1;return Object.entries(this.internals.docsById).forEach((([e,s])=>{s._deleted&&(s._meta.lwt>t||(delete this.internals.docsById[e],a=!0))})),a&&localstoragePersist(this),r},c.getAttachmentData=function(e,t){throw i("SNH")},c.remove=function(){return localStorage.removeItem(this.storageKey),localStorage.removeItem(this.changestreamStorageKey),o},c.close=function(){return this.closed?Promise.reject(i("SNH",{database:this.databaseName,collection:this.collectionName})):(this.closed=!0,this.changes$.complete(),this.changeStreamSub.unsubscribe(),localStorage.removeItem(this.changestreamStorageKey),o)},c.conflictResultionTasks=function(){return(new g).asObservable()},c.resolveConflictResultionTask=function(e){return o},t}();export function localstoragePersist(e){localStorage.setItem(e.storageKey,JSON.stringify(e.internals.docsById))}export async function createLocalstorageStorageInstance(e,t,a){var s={docsById:{}},n=new RxStorageInstanceLocalstorage(e,t.databaseName,t.collectionName,t.schema,s,t.options,a,t.databaseInstanceToken);return s.docsById=getStorageState(n.storageKey),n}export function getStorageState(e){var t=localStorage.getItem(e);return t?JSON.parse(t):{}}