import{flatClone as e,getFromMapOrThrow as o}from"rxdb/plugins/utils";import{exposeRxStorageRemote as s}from"rxdb/plugins/storage-remote";import{Subject as r}from"rxjs";export function exposeWorkerRxStorage(t){var a;console.log("exposeWorkerRxStorage()");var n=new r;if("undefined"!=typeof self&&"object"==typeof self.onconnect){console.log("exposeWorkerRxStorage() is shared worker");var g=new Map;self.onconnect=o=>{var s=o.ports[0];s.onmessage=o=>{var r=o.data;if("create"===r.method){var t=e(r.params);t.multiInstance=!1,r.params=t}g.set(r.connectionId,s),n.next(r)}},a={storage:t.storage,messages$:n,send(e){o(g,e.connectionId).postMessage(e)}}}else console.log("exposeWorkerRxStorage() is NOT shared worker"),addEventListener("message",(e=>{var o=e.data;n.next(o)})),a={storage:t.storage,messages$:n,send(e){self.postMessage(e)}};s(a)}